# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h798Y7zAWFhezug9fk04iNyk2kn6UBAn
"""

# ----------------------------
# 1. استيراد المكتبات
# ----------------------------
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder
import joblib

# ----------------------------
# 2. تحميل وتجهيز البيانات
# ----------------------------
df = pd.read_csv("Final_Model_Training_Data.csv")
df.columns = df.columns.str.strip()

# ملء القيم الناقصة
df = df.fillna({
    'Seat_Multiplier': 3.0,
    'Stage': 'Unknown',
    'Venue': 'Unknown',
    'Team_1': 'Unknown',
    'Team_2': 'Unknown'
})
df['Base_Price_Base'] = df['Base_Price_Base'].fillna(df['Base_Price'] / df['Seat_Multiplier'])

# ----------------------------
# 3. ترميز الأعمدة الفئوية
# ----------------------------
le = LabelEncoder()
df['Importance_Num'] = le.fit_transform(df['Importance'])
df['Stage_Num'] = le.fit_transform(df['Stage'])
df['Venue_Num'] = le.fit_transform(df['Venue'])
df['Team1_Num'] = le.fit_transform(df['Team_1'])
df['Team2_Num'] = le.fit_transform(df['Team_2'])

# ----------------------------
# 4. تجهيز المدخلات والمخرجات
# ----------------------------
X = df[['Base_Price_Base', 'Importance_Num', 'Stage_Num', 'Venue_Num',
        'Team1_Num', 'Team2_Num', 'Days_until_match', 'Tickets_Sold', 'Year']]
y = df['Base_Price']

# ----------------------------
# 5. تقسيم البيانات
# ----------------------------
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ----------------------------
# 6. تدريب المودل
# ----------------------------
model = RandomForestRegressor(random_state=42)
model.fit(X_train, y_train)

# ----------------------------
# 7. تقييم المودل
# ----------------------------
y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print(f"\n📈 RandomForestRegressor")
print(f"R² Score: {r2:.2f}")
print(f"RMSE: {rmse:.2f}")

# ----------------------------
# 8. حفظ المودل
# ----------------------------
joblib.dump(model, "final_random_forest_model.pkl")